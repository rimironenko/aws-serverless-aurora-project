AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  AuroraUsername:
    Type: String
    Description: Master user name for the Aurora Cluster
  AuroraPassword:
    Type: String
    Description: Master password for the Aurora Cluster


Resources:

  AuroraLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: aurora-serverless-lambda-layer
      CompatibleRuntimes:
        - java8
    Metadata:
      BuildMethod: java8

  GetAuroraItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java8
      Handler: com.home.amazon.serverless.lambda.GetAuroraItemFunction::handleRequest
      Timeout: 60
      MemorySize: 256
      CodeUri: aurora-serverless-get-item
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
           - Effect: Allow
             Action:
              - rds-data:BatchExecuteStatement
              - rds-data:BeginTransaction
              - rds-data:CommitTransaction
              - rds-data:ExecuteStatement
              - rds-data:RollbackTransaction
             Resource: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
           - Effect: Allow
             Action:
               - secretsmanager:GetSecretValue
             Resource: !Ref AuroraSecret
      Environment:
        Variables:
          AuroraClusterArn: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
          DatabaseName: booksdb
          AuroraSecretArn: !Ref AuroraSecret
      AutoPublishAlias: dev
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books/{id}
            Method: get
            RestApiId:
              Ref: AuroraApi
      Layers:
        - Ref: AuroraLambdaLayer
    Metadata:
      BuildMethod: makefile

  PutAuroraItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java8
      Handler: com.home.amazon.serverless.lambda.PutAuroraItemFunction::handleRequest
      Timeout: 60
      MemorySize: 256
      CodeUri: aurora-serverless-put-item
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-data:BatchExecuteStatement
                - rds-data:BeginTransaction
                - rds-data:CommitTransaction
                - rds-data:ExecuteStatement
                - rds-data:RollbackTransaction
              Resource: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref AuroraSecret
      Environment:
        Variables:
          AuroraClusterArn: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
          DatabaseName: booksdb
          AuroraSecretArn: !Ref AuroraSecret
      AutoPublishAlias: dev
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: post
            RestApiId:
              Ref: AuroraApi
      Layers:
        - Ref: AuroraLambdaLayer
    Metadata:
      BuildMethod: makefile

  DeleteAuroraItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java8
      Handler: com.home.amazon.serverless.lambda.DeleteAuroraItemFunction::handleRequest
      Timeout: 60
      MemorySize: 256
      CodeUri: aurora-serverless-delete-item
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-data:BatchExecuteStatement
                - rds-data:BeginTransaction
                - rds-data:CommitTransaction
                - rds-data:ExecuteStatement
                - rds-data:RollbackTransaction
              Resource: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref AuroraSecret
      Environment:
        Variables:
          AuroraClusterArn: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
          DatabaseName: booksdb
          AuroraSecretArn: !Ref AuroraSecret
      AutoPublishAlias: dev
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books/{id}
            Method: delete
            RestApiId:
              Ref: AuroraApi
      Layers:
        - Ref: AuroraLambdaLayer
    Metadata:
      BuildMethod: makefile

  UpdateAuroraItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java8
      Handler: com.home.amazon.serverless.lambda.UpdateAuroraItemFunction::handleRequest
      Timeout: 60
      MemorySize: 256
      CodeUri: aurora-serverless-update-item
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-data:BatchExecuteStatement
                - rds-data:BeginTransaction
                - rds-data:CommitTransaction
                - rds-data:ExecuteStatement
                - rds-data:RollbackTransaction
              Resource: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref AuroraSecret
      Environment:
        Variables:
          AuroraClusterArn: !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AuroraServerlessCluster}'
          DatabaseName: booksdb
          AuroraSecretArn: !Ref AuroraSecret
      AutoPublishAlias: dev
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books/
            Method: put
            RestApiId:
              Ref: AuroraApi
      Layers:
        - Ref: AuroraLambdaLayer
    Metadata:
      BuildMethod: makefile

  AuroraServerlessCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineMode: serverless
      DatabaseName: booksdb
      MasterUsername: !Ref AuroraUsername
      MasterUserPassword: !Ref AuroraPassword
      EnableHttpEndpoint: true

  AuroraSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      SecretString: !Sub '{"username":"${AuroraUsername}","password":"${AuroraPassword}", "dbClusterIdentifier":"${AuroraServerlessCluster}"}'

  AuroraApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Variables:
        LAMBDA_ALIAS: dev